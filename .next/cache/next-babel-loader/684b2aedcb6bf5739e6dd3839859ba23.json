{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/emma/Documents/Ritaweb/ip-tracking-app/pages/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport Input from \"../components/Input.js\";\nimport IpCard from \"../components/IpCard.js\";\nimport Map from \"../components/Mapjs\";\n\nfunction Home() {\n  _s();\n\n  var _useState = useState(\"\"),\n      ip = _useState[0],\n      setIp = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      ipData = _useState2[0],\n      setIpData = _useState2[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ip) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setIp(ip);\n\n            case 2:\n              console.log(ip);\n              getIpDetails(ip);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getIpDetails = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ip) {\n      var res, json;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"https://geo.ipify.org/api/v1?apiKey=at_Ycuf9ssDWYjHU8yM3Xx7cs7R0Vv3B&ipAddress=\".concat(ip));\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              json = _context2.sent;\n              setIpData(json);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getIpDetails(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"IP Tracker\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    handleSubmit: handleSubmit,\n    ipTyped: ip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(IpCard, {\n    ipDetails: ipData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), __jsx(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Home, \"9+FuHZq0vFvrk5PKMMwPXCwu9YU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/emma/Documents/Ritaweb/ip-tracking-app/pages/index.js"],"names":["React","useState","Head","Input","IpCard","Map","Home","ip","setIp","ipData","setIpData","handleSubmit","console","log","getIpDetails","fetch","res","json"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACML,QAAQ,CAAC,EAAD,CADd;AAAA,MACPM,EADO;AAAA,MACHC,KADG;;AAAA,mBAEcP,QAAQ,CAAC,EAAD,CAFtB;AAAA,MAEPQ,MAFO;AAAA,MAECC,SAFD;;AAId,MAAMC,YAAY;AAAA,wEAAG,iBAAOJ,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACbC,KAAK,CAACD,EAAD,CADQ;;AAAA;AAEnBK,cAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ;AACAO,cAAAA,YAAY,CAACP,EAAD,CAAZ;;AAHmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZI,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAMA,MAAMG,YAAY;AAAA,yEAAG,kBAAOP,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDQ,KAAK,0FAC6DR,EAD7D,EADJ;;AAAA;AACbS,cAAAA,GADa;AAAA;AAAA,qBAIAA,GAAG,CAACC,IAAJ,EAJA;;AAAA;AAIbA,cAAAA,IAJa;AAKnBP,cAAAA,SAAS,CAACO,IAAD,CAAT;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZH,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,uCAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,YAAY,EAAEH,YAArB;AAAmC,IAAA,OAAO,EAAEJ,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CALF,CADF;AAaD;;GA/BQH,I;;KAAAA,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport Input from \"../components/Input.js\";\nimport IpCard from \"../components/IpCard.js\";\nimport Map from \"../components/Mapjs\";\n\nfunction Home() {\n  const [ip, setIp] = useState(\"\");\n  const [ipData, setIpData] = useState(\"\");\n\n  const handleSubmit = async (ip) => {\n    await setIp(ip);\n    console.log(ip);\n    getIpDetails(ip);\n  };\n\n  const getIpDetails = async (ip) => {\n    const res = await fetch(\n      `https://geo.ipify.org/api/v1?apiKey=at_Ycuf9ssDWYjHU8yM3Xx7cs7R0Vv3B&ipAddress=${ip}`\n    );\n    const json = await res.json();\n    setIpData(json);\n  };\n\n  return (\n    <div>\n      <Head>\n        <title>IP Tracker</title>\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n      </Head>\n      <div className=\"Home\">\n        <Input handleSubmit={handleSubmit} ipTyped={ip} />\n        <IpCard ipDetails={ipData} />\n        <Map/>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}